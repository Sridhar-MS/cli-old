#!/bin/bash

source /usr/share/dotnet-compile-native/config/config.shprops
GLOBIGNORE="*"

corerun="${INSTALL_ROOT}/coreclr/CoreRun"
il_to_cpp=${INSTALL_ROOT}/native/ILToCpp/ILToCPP.exe

c_libs="${INSTALL_ROOT}/native/sharedlibs/libSystem.Native.a ${INSTALL_ROOT}/native/sharedlibs/libclrgc.a"
c_includes="-I${INSTALL_ROOT}/native/inc -I${INSTALL_ROOT}/native/inc/GC -I${INSTALL_ROOT}/native/inc/GC/env ${INSTALL_ROOT}/native/inc/lxstubs.cpp ${INSTALL_ROOT}/native/inc/main.cpp"
c_flags="-g -lstdc++ -lrt -Wno-invalid-offsetof"

il_to_cpp_args="-r ${INSTALL_ROOT}/native/lib/Unix/*.dll -r ${INSTALL_ROOT}/native/lib/*.dll -llvm"

print_usage(){
	echo "Usage: dotnet-native-compile [il_assembly_path] [output_dir]"
}

# Usage: il_to_cpp [il assembly file]
il_to_cpp(){
	il_assembly_file="$1"
	il_assembly_filename=$(basename "$il_assembly_file" .dll)

	intermediate_cpp_file=/tmp/${il_assembly_filename}.cpp
	rm -f $intermediate_cpp_file

	full_command="$corerun $il_to_cpp $il_to_cpp_args -out $intermediate_cpp_file $il_assembly_file"	
	$full_command > /dev/null

	echo $intermediate_cpp_file
}

# Usage: cpp_to_native [cpp file] [output dir]
cpp_to_native(){
	
	cpp_file="$1"
	cpp_filename=$(basename "$cpp_file" .cpp)

	output_directory="$2"
	output_file=$output_directory/${cpp_filename}
	rm -f $output_file

	cp ${INSTALL_ROOT}/native/inc/stubs.cpp /tmp/stubs.cpp
	full_command="clang-3.5 $c_flags $c_includes $cpp_file $c_libs -o $output_file"

	$full_command > /dev/null
	chmod u+x $output_file

	echo $output_file
}

validate_args(){
	if [ -z "$1" ] || [ ! -f "$1" ]; then
		echo "Error: Invalid il_assembly_path argument"
		print_usage
		exit 1
	fi

	if [ -z "$2" ] || [ ! -d "$2" ]; then
		echo "Error: Invalid output_dir argument"
		print_usage
		exit 1
	fi
}

validate_args $@

echo "Converting $1 to native"

tmp_cpp_file="$(il_to_cpp "$1")"
output_executable="$(cpp_to_native "$tmp_cpp_file" "$2")"

echo "native output: $output_executable"

exit 0